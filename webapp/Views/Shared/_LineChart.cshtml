@using ChartsMix.Models
@using Highsoft.Web.Mvc.Charts
@model LineChartModel
<div>
    @using (Html.BeginForm("Index", "Home"))
    {
        <div class="jarviswidget-editbox">
            <div class="widget-body">
                <div class="row">
                    <div class="col-md-6 form-group">
                        @Html.EnumDropDownListFor(m => m.period, "Period", new { @class = "form-control", @id = "ddlLine" })
                    </div>
                </div>
                <div class="row" id="divDateLine" style="display : none">
                    <div class="col-md-6 form-group">
                        @Html.EditorFor(m => m.From)
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.EditorFor(m => m.To)
                    </div>
                </div>
                <div class="tree smart-form">
                    <ul>
                        @Html.Raw(Helpers.FormTreeView(Model.TreeRoot, "line"))
                    </ul>
                </div>
            </div>
            <input type="button" class="btn btn-default" value="Show Line Chart" id="getChartLine" onclick="GetLineChart()" />
        </div>
    }
    <div class="widget-body">
        <div id="lineChart"></div>
    </div>
    <!-- end widget content -->
</div>
<script>

    function GetLineChart() {
        var model = {};
        model.Period = $('#ddlLine').val();
        model.From = $('#From').val();
        model.To = $('#To').val();
        model.Ids = [];
        $('input[name=lineIds]:checked').each(function () {
            model.Ids.push($(this).attr('value'));
        });
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetLineChart", "Home")',
            data: model,
            dataType: "json",
            traditional: true,
            success: function (data) {
                var arr = [];
                var v = [];
                var len = data.Result.length;
                for (var i = 0; i < len; i++) {
                    v = [];
                    for (var j = 0; j < data.Result[i].things.length; j++)
                        v[j] = data.Result[i].things[j].Y;
                    arr.push({
                        data: v,
                        name: data.Result[i].Name
                    });
                }
                DreawChart(arr,data.Dates);
            },
            error: function (data,dates) {
                alert("sam");
            }
        });
    }
    function DreawChart(data,dates) {
        
        Highcharts.chart('lineChart', {
            chart: {
                type: 'line'
            },
            title: {
                text: 'Monthly Consumption'
            },
            subtitle: {
                text: 'Source: WorldClimate.com'
            },
            xAxis: {
                categories: dates
            },
            yAxis: {
                title: {
                    text: 'Consumption'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: true
                }
            },
            series: data
        });
    }

</script>